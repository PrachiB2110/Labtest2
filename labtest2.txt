import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sb
from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, classification_report

diabetes = datasets.load_diabetes()
X = pd.DataFrame(diabetes.data, columns=diabetes.feature_names)
y = pd.Series(diabetes.target, name='target')


print(f"Number of features: {X.shape[1]}")
sb.pairplot(X)
plt.show()

X.fillna(X.mean(), inplace=True)


splits = [(0.6, 0.4), (0.8, 0.2)]
for train_size, test_size in splits:
    X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=train_size, test_size=test_size, random_state=0)


knn = KNeighborsClassifier()
knn.fit(X_train, y_train)
y_pred_knn = knn.predict(X_test)

nb = GaussianNB()
nb.fit(X_train, y_train)
y_pred_nb = nb.predict(X_test)

plt.figure(figsize=(12, 8))
for i, feature in enumerate(X.columns, 1):
   plt.subplot(3, 4, i)
   plt.scatter(X[feature],y,alpha=0.6)
   plt.xlabel(feature)
   plt.ylabel("Blood Sugar Level")
plt.tight_layout()
plt.show()
